--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v80=(v31/((5 -3)^(v32-((879 -(282 + 595)) -1))))%((3 -1)^(((v33-((1639 -(1523 + 114)) -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v80-(v80%1) ;else local v81=(570 -(367 + 181 + 20))^(v32-(928 -(214 + (1015 -302)))) ;return (((v31%(v81 + v81))>=v81) and (1 + (1065 -(68 + 997)))) or (0 + 0) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34,v35,v36,v37=v1(v16,v19,v19 + (1273 -(222 + 4 + 1044)) );v19=v19 + (17 -13) ;return (v37 * (16777333 -(32 + 85))) + (v36 * 65536) + (v35 * 256) + v34 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;while true do local v65=258 -(190 + 68) ;while true do if (v65==(0 -0)) then if (v38~=(1852 -(1409 + 441))) then else local v94=718 -(15 + 703) ;local v95;while true do if (v94~=0) then else v95=0;while true do local v98=0;while true do if (v98==(0 + 0)) then if (v95~=1) then else return v42;end if (v95==0) then for v122=1,v24() do local v123=0;local v124;local v125;local v126;while true do if (v123==(438 -(262 + 176))) then v124=1721 -(345 + 1376) ;v125=nil;v123=689 -(198 + 490) ;end if (v123==(4 -3)) then v126=nil;while true do if (v124==0) then local v291=0 -0 ;local v292;while true do if (v291~=0) then else v292=0;while true do if (v292==0) then local v327=1206 -(696 + 510) ;while true do if (v327~=(0 -0)) then else v125=0;v126=nil;v327=1263 -(1091 + 171) ;end if (v327==(1 + 0)) then v292=1;break;end end end if (v292==(3 -2)) then v124=3 -2 ;break;end end break;end end end if (v124~=(375 -(123 + 251))) then else while true do if (v125==(0 -0)) then v126=v22();if (v21(v126,699 -(208 + 490) ,1 + 0 )==(0 + 0)) then local v315=0;local v316;local v317;local v318;local v319;local v320;while true do if (v315~=1) then else v318=nil;v319=nil;v315=2;end if (v315==2) then v320=nil;while true do if (v316~=0) then else local v328=0;while true do if (v328==(837 -(660 + 176))) then v316=1;break;end if (0~=v328) then else v317=0;v318=nil;v328=1;end end end if (v316==(1 + 0)) then v319=nil;v320=nil;v316=2;end if (v316==2) then while true do if (v317==(203 -(14 + 188))) then local v329=0;local v330;while true do if (v329==0) then v330=0;while true do if (v330==0) then local v339=675 -(534 + 141) ;local v340;while true do if (v339~=0) then else v340=0 + 0 ;while true do if (v340==(1 + 0)) then v330=1;break;end if (v340~=(0 + 0)) then else local v346=0;while true do if (v346==1) then v340=1 -0 ;break;end if ((0 -0)~=v346) then else v320={v23(),v23(),nil,nil};if (v318==(0 + 0)) then local v347=0;local v348;local v349;while true do if (v347~=0) then else v348=396 -(115 + 281) ;v349=nil;v347=1;end if ((2 -1)==v347) then while true do if (v348==0) then v349=0 + 0 ;while true do if (v349==0) then v320[7 -4 ]=v23();v320[4]=v23();break;end end break;end end break;end end elseif (v318==(3 -2)) then v320[3]=v24();elseif (v318==(869 -(550 + 317))) then v320[3]=v24() -((2 -0)^16) ;elseif (v318==(3 -0)) then local v352=0 -0 ;local v353;while true do if (v352==(285 -(134 + 151))) then v353=1665 -(970 + 695) ;while true do if (v353~=(0 -0)) then else v320[3]=v24() -(2^16) ;v320[1994 -(582 + 1408) ]=v23();break;end end break;end end end v346=1;end end end end break;end end end if (v330~=(3 -2)) then else v317=2 -0 ;break;end end break;end end end if (v317~=3) then else if (v21(v319,11 -8 ,3)==(1825 -(1195 + 629))) then v320[4]=v44[v320[5 -1 ]];end v39[v122]=v320;break;end if (v317==2) then local v332=241 -(187 + 54) ;local v333;while true do if (v332~=(780 -(162 + 618))) then else v333=0;while true do if (v333==(1 + 0)) then v317=2 + 1 ;break;end if (v333==(0 -0)) then if (v21(v319,1 -0 ,1)==(1 + 0)) then v320[2]=v44[v320[2]];end if (v21(v319,1638 -(1373 + 263) ,1002 -(451 + 549) )~=1) then else v320[3]=v44[v320[1 + 2 ]];end v333=1;end end break;end end end if (v317==(0 -0)) then local v334=0 -0 ;local v335;local v336;while true do if (v334~=1) then else while true do if (v335~=(1384 -(746 + 638))) then else v336=0;while true do if (v336~=(0 + 0)) then else local v345=0;while true do if (v345==1) then v336=1 -0 ;break;end if (v345~=(341 -(218 + 123))) then else v318=v21(v126,2,3);v319=v21(v126,4,1587 -(1535 + 46) );v345=1 + 0 ;end end end if (v336==(1 + 0)) then v317=561 -(306 + 254) ;break;end end break;end end break;end if (0==v334) then v335=0 + 0 ;v336=nil;v334=1;end end end end break;end end break;end if ((0 -0)~=v315) then else v316=1467 -(899 + 568) ;v317=nil;v315=1;end end end break;end end break;end end break;end end end for v127=1,v24() do v40[v127-(1 + 0) ]=v29();end v95=2 -1 ;end break;end end end break;end end end if (v38~=1) then else local v96=0;local v97;while true do if (v96==(603 -(268 + 335))) then v97=290 -(60 + 230) ;while true do if (v97~=(574 -(426 + 146))) then else v38=1 + 1 ;break;end if (v97~=0) then else v43=v24();v44={};v97=1;end if (v97==(1457 -(282 + 1174))) then for v100=812 -(569 + 242) ,v43 do local v101=0 -0 ;local v102;local v103;local v104;local v105;while true do if (0==v101) then v102=0 + 0 ;v103=nil;v101=1025 -(706 + 318) ;end if (v101~=1) then else v104=nil;v105=nil;v101=1253 -(721 + 530) ;end if (v101~=2) then else while true do if (v102==(1272 -(945 + 326))) then v105=nil;while true do if (v103~=1) then else if (v104==1) then v105=v22()~=(0 -0) ;elseif (v104==(2 + 0)) then v105=v25();elseif (v104~=(703 -(271 + 429))) then else v105=v26();end v44[v100]=v105;break;end if (v103==0) then local v294=0 + 0 ;local v295;while true do if (v294~=0) then else v295=0;while true do if (v295~=(1501 -(1408 + 92))) then else v103=1;break;end if (v295==0) then v104=v22();v105=nil;v295=1087 -(461 + 625) ;end end break;end end end end break;end if (v102~=(1288 -(993 + 295))) then else local v245=0;while true do if (v245~=(1 + 0)) then else v102=1;break;end if (v245==(1171 -(418 + 753))) then v103=0;v104=nil;v245=1;end end end end break;end end end v42[2 + 1 ]=v22();v97=1 + 1 ;end end break;end end end v65=1 + 0 ;end if (1==v65) then if (v38~=0) then else v39={};v40={};v41={};v42={v39,v40,nil,v41};v38=1 + 0 ;end break;end end end end v30=nil;v18=7;end if (v18==4) then function v25()local v45=v24();local v46=v24();local v47=1323 -(1249 + 73) ;local v48=(v21(v46,1 + 0 ,186 -(122 + 44) ) * ((2 -0)^(1177 -(466 + 679)))) + v45 ;local v49=v21(v46,21,74 -43 );local v50=((v21(v46,91 -59 )==(1 -0)) and  -(1901 -(106 + 1039 + 755))) or (1 + 0) ;if (v49==(0 + 0)) then if (v48==(0 -(0 + 0))) then return v50 * ((2107 -(20 + 830)) -(1043 + 214)) ;else v49=2 -1 ;v47=114 -(4 + 110) ;end elseif (v49==(5509 -3462)) then return ((v48==(584 -(57 + 527))) and (v50 * ((1428 -(41 + 1386))/(0 + 0 + 0)))) or (v50 * NaN) ;end return v8(v50,v49-(1126 -(17 + 86)) ) * (v47 + (v48/((2 + (126 -(116 + 10)))^(115 -63)))) ;end v26=nil;function v26(v51)local v52=0 + (1551 -(1126 + 425)) ;local v53;local v54;while true do if (v52==(408 -(118 + 287))) then return v6(v54);end if (v52==(739 -(542 + (768 -572)))) then v53=v3(v16,v19,(v19 + v51) -1 );v19=v19 + v51 ;v52=3 -1 ;end if (v52==(1 + 1)) then v54={};for v85=1, #v53 do v54[v85]=v2(v1(v3(v53,v85,v85)));end v52=2 + 1 ;end if (v52==(0 + 0)) then v53=nil;if  not v51 then v51=v24();if (v51==(0 -0)) then return "";end end v52=2 -(1122 -(118 + 1003)) ;end end end v18=5;end if (v18==2) then function v22()local v55=v1(v16,v19,v19);v19=v19 + 1 ;return v55;end v23=nil;function v23()local v56,v57=v1(v16,v19,v19 + (5 -3) );v19=v19 + (379 -(142 + 235)) ;return (v57 * 256) + v56 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v58)if (v1(v58,2)==79) then v20=v0(v3(v58,1,1));return "";else local v82=v2(v0(v58,16));if v20 then local v87=v5(v82,v20);v20=nil;return v87;else return v82;end end end);v18=1;end if (v18==7) then function v30(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v66=v62;local v67=v63;local v68=v64;local v69=v28;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v83=0,v74 do if (v83>=v68) then v72[v83-v68 ]=v73[v83 + 1 ];else v76[v83]=v73[v83 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v84=0;while true do if (v84==1) then if (v79<=26) then if (v79<=12) then if (v79<=5) then if (v79<=2) then if (v79<=0) then v76[v78[2]]=v76[v78[3]];elseif (v79==1) then v76[v78[2]]=v76[v78[3]][v78[4]];else local v131=v78[2];local v132=v76[v131];local v133=v78[3];for v214=1,v133 do v132[v214]=v76[v131 + v214 ];end end elseif (v79<=3) then v76[v78[2]]=v61[v78[3]];elseif (v79==4) then v76[v78[2]]=v76[v78[3]][v78[4]];else local v136=v78[2];v76[v136](v13(v76,v136 + 1 ,v78[3]));end elseif (v79<=8) then if (v79<=6) then local v110=v78[2];v76[v110](v13(v76,v110 + 1 ,v78[3]));elseif (v79>7) then v70=v78[3];elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=10) then if (v79>9) then v76[v78[2]]=v78[3];else v76[v78[2]][v78[3]]=v78[4];end elseif (v79==11) then local v142=v78[2];local v143=v76[v78[3]];v76[v142 + 1 ]=v143;v76[v142]=v143[v78[4]];elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=19) then if (v79<=15) then if (v79<=13) then local v111=0;local v112;while true do if (v111==0) then v112=v78[2];v76[v112]=v76[v112](v76[v112 + 1 ]);break;end end elseif (v79>14) then v76[v78[2]]=v61[v78[3]];else local v149=0;local v150;local v151;while true do if (v149==0) then v150=v78[2];v151=v76[v150];v149=1;end if (v149==1) then for v278=v150 + 1 ,v78[3] do v7(v151,v76[v278]);end break;end end end elseif (v79<=17) then if (v79>16) then v76[v78[2]]=v60[v78[3]];else do return;end end elseif (v79>18) then v76[v78[2]]=v30(v67[v78[3]],nil,v61);else local v155=v78[2];local v156=v76[v78[3]];v76[v155 + 1 ]=v156;v76[v155]=v156[v78[4]];end elseif (v79<=22) then if (v79<=20) then local v113=0;local v114;local v115;local v116;while true do if (v113==0) then v114=v67[v78[3]];v115=nil;v113=1;end if (v113==2) then for v248=1,v78[4] do local v249=0;local v250;while true do if (v249==1) then if (v250[1]==30) then v116[v248-1 ]={v76,v250[3]};else v116[v248-1 ]={v60,v250[3]};end v75[ #v75 + 1 ]=v116;break;end if (v249==0) then v70=v70 + 1 ;v250=v66[v70];v249=1;end end end v76[v78[2]]=v30(v114,v115,v61);break;end if (v113==1) then v116={};v115=v10({},{__index=function(v251,v252)local v253=v116[v252];return v253[1][v253[2]];end,__newindex=function(v254,v255,v256)local v257=v116[v255];v257[1][v257[2]]=v256;end});v113=2;end end elseif (v79==21) then local v160=v78[2];v76[v160](v76[v160 + 1 ]);else local v161=0;local v162;local v163;while true do if (v161==0) then v162=v78[2];v163={};v161=1;end if (v161==1) then for v279=1, #v75 do local v280=v75[v279];for v298=0, #v280 do local v299=0;local v300;local v301;local v302;while true do if (v299==0) then v300=v280[v298];v301=v300[1];v299=1;end if (v299==1) then v302=v300[2];if ((v301==v76) and (v302>=v162)) then v163[v302]=v301[v302];v300[1]=v163;end break;end end end end break;end end end elseif (v79<=24) then if (v79>23) then v76[v78[2]]=v60[v78[3]];else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79>25) then v76[v78[2]]={};else local v169=v76[v78[4]];if  not v169 then v70=v70 + 1 ;else v76[v78[2]]=v169;v70=v78[3];end end elseif (v79<=40) then if (v79<=33) then if (v79<=29) then if (v79<=27) then v76[v78[2]]=v30(v67[v78[3]],nil,v61);elseif (v79>28) then v70=v78[3];else local v171=v78[2];local v172={};for v221=1, #v75 do local v222=0;local v223;while true do if (v222==0) then v223=v75[v221];for v303=0, #v223 do local v304=v223[v303];local v305=v304[1];local v306=v304[2];if ((v305==v76) and (v306>=v171)) then local v309=0;while true do if (0==v309) then v172[v306]=v305[v306];v304[1]=v172;break;end end end end break;end end end end elseif (v79<=31) then if (v79>30) then local v173=v78[2];v76[v173](v76[v173 + 1 ]);else v76[v78[2]]=v76[v78[3]];end elseif (v79>32) then local v176=v67[v78[3]];local v177;local v178={};v177=v10({},{__index=function(v224,v225)local v226=0;local v227;while true do if (v226==0) then v227=v178[v225];return v227[1][v227[2]];end end end,__newindex=function(v228,v229,v230)local v231=v178[v229];v231[1][v231[2]]=v230;end});for v233=1,v78[4] do v70=v70 + 1 ;local v234=v66[v70];if (v234[1]==30) then v178[v233-1 ]={v76,v234[3]};else v178[v233-1 ]={v60,v234[3]};end v75[ #v75 + 1 ]=v178;end v76[v78[2]]=v30(v176,v177,v61);else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=36) then if (v79<=34) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==35) then local v183=v78[2];v76[v183]=v76[v183](v76[v183 + 1 ]);else local v185=0;local v186;local v187;while true do if (0==v185) then v186=v78[3];v187=v76[v186];v185=1;end if (v185==1) then for v283=v186 + 1 ,v78[4] do v187=v187   .. v76[v283] ;end v76[v78[2]]=v187;break;end end end elseif (v79<=38) then if (v79>37) then v76[v78[2]]={};else v76[v78[2]]();end elseif (v79==39) then local v189=0;local v190;local v191;local v192;local v193;while true do if (v189==0) then v190=v78[2];v191,v192=v69(v76[v190](v13(v76,v190 + 1 ,v78[3])));v189=1;end if (v189==2) then for v284=v190,v71 do local v285=0;while true do if (v285==0) then v193=v193 + 1 ;v76[v284]=v191[v193];break;end end end break;end if (v189==1) then v71=(v192 + v190) -1 ;v193=0;v189=2;end end else local v194=v78[2];v76[v194]=v76[v194](v13(v76,v194 + 1 ,v71));end elseif (v79<=47) then if (v79<=43) then if (v79<=41) then local v118=0;local v119;while true do if (v118==0) then v119=v78[2];v76[v119]=v76[v119](v13(v76,v119 + 1 ,v78[3]));break;end end elseif (v79==42) then local v196=0;local v197;local v198;local v199;while true do if (v196==1) then v199=v78[3];for v286=1,v199 do v198[v286]=v76[v197 + v286 ];end break;end if (v196==0) then v197=v78[2];v198=v76[v197];v196=1;end end else do return;end end elseif (v79<=45) then if (v79==44) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v200=0;local v201;while true do if (v200==0) then v201=v78[2];v76[v201]=v76[v201](v13(v76,v201 + 1 ,v71));break;end end end elseif (v79>46) then local v202=v78[2];v76[v202]=v76[v202](v13(v76,v202 + 1 ,v78[3]));else for v238=v78[2],v78[3] do v76[v238]=nil;end end elseif (v79<=50) then if (v79<=48) then v76[v78[2]][v78[3]]=v78[4];elseif (v79>49) then v76[v78[2]]=v78[3];else for v240=v78[2],v78[3] do v76[v240]=nil;end end elseif (v79<=52) then if (v79>51) then local v206=v78[2];local v207,v208=v69(v76[v206](v13(v76,v206 + 1 ,v78[3])));v71=(v208 + v206) -1 ;local v209=0;for v242=v206,v71 do local v243=0;while true do if (v243==0) then v209=v209 + 1 ;v76[v242]=v207[v209];break;end end end else v76[v78[2]]();end elseif (v79==53) then local v210=v78[3];local v211=v76[v210];for v244=v210 + 1 ,v78[4] do v211=v211   .. v76[v244] ;end v76[v78[2]]=v211;else local v213=v76[v78[4]];if  not v213 then v70=v70 + 1 ;else v76[v78[2]]=v213;v70=v78[3];end end v70=v70 + 1 ;break;end if (0==v84) then v78=v66[v70];v79=v78[1];v84=1;end end end end;end return v30(v29(),{},v17)(...);end end end vv9(),...);end
